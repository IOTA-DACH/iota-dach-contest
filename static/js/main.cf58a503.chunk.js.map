{"version":3,"sources":["components/home.js","components/contact.js","assets/hat.png","components/done.js","components/conditions.js","components/navigation.js","assets/logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","Contact","state","name","title","message","status","buttonText","this","onSubmit","handleSubmit","bind","method","type","id","value","onChange","handleChange","required","aria-describedby","placeholder","rows","label","onClick","Conditions","style","fontWeight","event","field","target","setState","preventDefault","axios","url","data","then","response","setTimeout","window","location","replace","alert","Component","Done","src","hat","alt","Navigation","exact","path","App","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf58a503.chunk.js","sourcesContent":["import '../App.css';\r\n\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <span className=\"introtext\">\r\n                <a>Da uns mit dem Release von Chrysalis spannende Tage bevorstehen, haben wir uns gedacht, dass wir in den kommenden Wochen ein kleines Giveaway veranstalten.</a>\r\n                <br />\r\n                <br />\r\n                <a>Was gibt es zu gewinnen?</a>\r\n                <br />\r\n                <br />\r\n                <a>1. Platz: 40 Miota + 1 IOTA Cawendar + 1 limitierten Chrysalis Dog Tag/Schlüsselanhänger #1 + 1 IOTA Münze </a>\r\n                <br />\r\n                <a>2. Platz: 25 Miota + 1 limitierten Chrysalis Dog Tag/Schlüsselanhänger #2 + 1 IOTA Münze</a>\r\n                <br />\r\n                <a>3. Platz: 10 Miota + 1 limitierten Chrysalis Dog Tag/Schlüsselanhänger #3 + 1 IOTA Münze</a>\r\n                <br />\r\n                <a>4. Platz: 1 limitierten Chrysalis Dog Tag/Schlüsselanhänger #4 + 1 IOTA Münze</a>\r\n                <br />\r\n                <a>5. Platz: 1 limitierten Chrysalis Dog Tag/Schlüsselanhänger #5 + 1 IOTA Münze</a>\r\n                <br />\r\n                <a>6. Platz: Trostpreis 1 limitierten \"Krüsalis\" Dog Tag/Schlüsselanhänger #1</a>\r\n                <br />\r\n                <br />\r\n                <a>Was muss ich machen um zu gewinnen?</a>\r\n                <br />\r\n                <br />\r\n                <a>Geb deinen Telegram-Usernamen ein und teile uns deinen IOTA-Werbespruch mit! \r\n                   Mit welchem Spruch würdest du IOTA promoten? </a>\r\n                <br />\r\n                <br />\r\n                <a>Die Abstimmung, um einen Gewinner zu ermitteln, findet am Ende als Umfrage in der IOTA DACH Telegram Gruppe statt.</a>\r\n                <br />\r\n                <br />\r\n                <a>Die Münzen wurden vom langjährigen Community-Mitglied @ONOUAGH gespendet.</a>\r\n                <br />\r\n                <br />\r\n\r\n                <div className=\"bedingungen\">\r\n                   <br />\r\n                   <br />\r\n                    <a>\r\n                    Teilnahmebedingungen:\r\n                   <br />\r\n                   <br />\r\n                   Mehrfachteilname ist ausgeschlossen <br/>\r\n                   Teilnahme aus Deutschland, Österreich und der Schweiz<br/>\r\n                   Bitte nur ernstgemeinte Einsendungen\r\n                   <br />\r\n                   <br />\r\n\r\n                   Zeitraum der Teilnahme: xx.xx.xxxx - xx.xx.xxxx <br/>\r\n                   Zeitraum der Auslosung: xx.xx.xxxx - xx.xx.xxxx <br/>\r\n                   <br />\r\n                   <br />\r\n\r\n                   Liebe Grüße, euer IOTA DACH Admin Team\r\n                   <br />\r\n                   <br />\r\n\r\n                    </a>\r\n                </div>\r\n\r\n                </span>\r\n            </header>\r\n            <br />\r\n            <br />\r\n            <Link to=\"/form\"  className=\"btn\"> weiter </Link>\r\n            <br />\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport '../css/contact.css';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport Conditions from '../components/home'\r\n\r\n\r\nclass Contact extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            title: \"\",\r\n            message: \"\",\r\n            status: \"Submit\"\r\n        };\r\n    }\r\n    render() {\r\n        let buttonText = this.state.status;\r\n        return (\r\n\r\n            <div className='contact'>\r\n                \r\n\r\n                <div>\r\n\r\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\r\n                        <div >\r\n                            <input\r\n                                type='text'\r\n                                className='form-group'\r\n                                id=\"name\"\r\n                                value={this.state.name}\r\n                                onChange={this.handleChange.bind(this)}\r\n                                required\r\n                                aria-describedby='emailHelp'\r\n                                placeholder='Telegram-Usernamen eingeben'\r\n                            />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input\r\n                                type='title'\r\n                                className='form-group'\r\n                                id=\"title\"\r\n                                value={this.state.title}\r\n                                onChange={this.handleChange.bind(this)}\r\n                                required\r\n                                aria-describedby='titleHelp'\r\n                                placeholder='Titel der Einsendung'\r\n                            />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <textarea\r\n                                id=\"message\"\r\n                                className='form-group'\r\n                                value={this.state.message}\r\n                                onChange={this.handleChange.bind(this)}\r\n                                required\r\n                                rows='6'\r\n                                placeholder='Erkläre deine Idee:'\r\n                            />\r\n                        <div className=\"checkboxdiv\"> \r\n                            <input\r\n                                type='checkbox'\r\n                                className='checkbox'\r\n                                id=\"checkbox\"\r\n                                required\r\n                                name=\"checkbox\"\r\n                                label=\"i agree the\"\r\n                            />\r\n                            <span className=\"checkboxText\">Ich habe die </span>\r\n                            <Link to=\"/conditions\" onClick={() => Conditions()} className=\"checkboxText\" style={{fontWeight: \"bold\"}}> Teilnahmebedingungen und den Datenschutz </Link>\r\n                            <span className=\"checkboxText\">gelesen und stimme zu. </span>\r\n                        </div>   \r\n                        </div>\r\n            \r\n\r\n                        <div >\r\n                            <button className='submit-btn' type=\"submit\">\r\n                                {buttonText}\r\n                            </button>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <br></br>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <Link to=\"/\"  className=\"btn\"> zurück </Link>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    handleChange(event) {\r\n        const field = event.target.id;\r\n        if (field === \"name\") {\r\n            this.setState({ name: event.target.value });\r\n        } else if (field === \"title\") {\r\n            this.setState({ title: event.target.value });\r\n        } else if (field === \"message\") {\r\n            this.setState({ message: event.target.value });\r\n        }\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ status: \"Sending\" });\r\n        axios({\r\n            method: \"POST\",\r\n            url: \"https://owndev.net:443/contact\",\r\n            data: this.state,\r\n        }).then((response) => {\r\n            if (response.data.status === \"sent\") {\r\n                this.setState({ name: \"\", title: \"\", message: \"\", status: \"Gesendet!\" });\r\n                setTimeout(function () { window.location.replace(\"/#/thanks\"); }, 1000);\r\n            } else if (response.data.status === \"failed\") {\r\n                alert(\"Message Failed\");\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default Contact;","export default __webpack_public_path__ + \"static/media/hat.a372ebe8.png\";","import '../App.css';\r\nimport hat from '../assets/hat.png'\r\n\r\n\r\nfunction Done() {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n            <img src={hat} className=\"App-logo\" alt=\"hat\"/>\r\n              <br/>\r\n              <br/>\r\n                <span>\r\n                    Danke für die Teilnahme!\r\n                </span>\r\n            </header>\r\n            <body className=\"App-body\">\r\n            \r\n            </body>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Done;","import '../App.css';\r\n\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction Conditions() {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <span>\r\n                    NUTZUNGSBEDINGUNGEN\r\n                </span>\r\n            </header>\r\n            <Link to=\"/form\"  className=\"btn\"> zurück </Link>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Conditions;","import React from \"react\";\r\nimport Home from '../components/home'\r\nimport Contact from '../components/contact'\r\nimport Done from \"../components/done\";\r\n\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport '../css/navigation.css'\r\nimport Conditions from \"./conditions\";\r\n\r\nexport default function Navigation() {\r\n    return (\r\n        <Router >\r\n\r\n            <header>\r\n            </header>\r\n\r\n         \r\n\r\n                <div>\r\n\r\n                    <Link to=\"/\" className=\"NavbarIcon1\" > </Link>\r\n\r\n\r\n                    <Link to=\"/form\" className=\"NavbarIcon2\" > </Link>\r\n\r\n                    <Link to=\"/thanks\" className=\"NavbarIcon2\" > </Link>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route path=\"/form\">\r\n                        <Contact />\r\n                    </Route>\r\n                    <Route path=\"/thanks\">\r\n                        <Done />\r\n                    </Route>\r\n                    <Route path=\"/conditions\">\r\n                        <Conditions />\r\n                    </Route>\r\n\r\n                </Switch>\r\n          \r\n\r\n\r\n        </Router>\r\n\r\n\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/logo.de7cfd77.svg\";","import './App.css';\r\nimport Navigation from './components/navigation'\r\nimport logo from './assets/logo.svg'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <br />\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n        <br />\r\n        <Navigation />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}